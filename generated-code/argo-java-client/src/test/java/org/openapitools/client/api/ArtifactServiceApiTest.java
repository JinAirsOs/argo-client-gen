/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.junit.Ignore;
import org.junit.Test;
import org.openapitools.client.ApiException;

import java.io.File;

/**
 * API tests for ArtifactServiceApi
 */
@Ignore
public class ArtifactServiceApiTest {

    private final ArtifactServiceApi api = new ArtifactServiceApi();

    
    /**
     * Get an artifact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void artifactServiceGetArtifactFileTest() throws ApiException {
        String namespace = null;
        String idDiscriminator = null;
        String id = null;
        String nodeId = null;
        String artifactName = null;
        String artifactDiscriminator = null;
        File response = api.artifactServiceGetArtifactFile(namespace, idDiscriminator, id, nodeId, artifactName, artifactDiscriminator);

        // TODO: test validations
    }
    
    /**
     * Get an input artifact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void artifactServiceGetInputArtifactTest() throws ApiException {
        String namespace = null;
        String name = null;
        String nodeId = null;
        String artifactName = null;
        File response = api.artifactServiceGetInputArtifact(namespace, name, nodeId, artifactName);

        // TODO: test validations
    }
    
    /**
     * Get an input artifact by UID.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void artifactServiceGetInputArtifactByUIDTest() throws ApiException {
        String uid = null;
        String nodeId = null;
        String artifactName = null;
        File response = api.artifactServiceGetInputArtifactByUID(uid, nodeId, artifactName);

        // TODO: test validations
    }
    
    /**
     * Get an output artifact.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void artifactServiceGetOutputArtifactTest() throws ApiException {
        String namespace = null;
        String name = null;
        String nodeId = null;
        String artifactName = null;
        File response = api.artifactServiceGetOutputArtifact(namespace, name, nodeId, artifactName);

        // TODO: test validations
    }
    
    /**
     * Get an output artifact by UID.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void artifactServiceGetOutputArtifactByUIDTest() throws ApiException {
        String uid = null;
        String nodeId = null;
        String artifactName = null;
        File response = api.artifactServiceGetOutputArtifactByUID(uid, nodeId, artifactName);

        // TODO: test validations
    }
    
}
