/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import org.junit.Test;


/**
 * Model tests for WorkflowStatus
 */
public class WorkflowStatusTest {
    private final WorkflowStatus model = new WorkflowStatus();

    /**
     * Model tests for WorkflowStatus
     */
    @Test
    public void testWorkflowStatus() {
        // TODO: test WorkflowStatus
    }

    /**
     * Test the property 'artifactGCStatus'
     */
    @Test
    public void artifactGCStatusTest() {
        // TODO: test artifactGCStatus
    }

    /**
     * Test the property 'artifactRepositoryRef'
     */
    @Test
    public void artifactRepositoryRefTest() {
        // TODO: test artifactRepositoryRef
    }

    /**
     * Test the property 'compressedNodes'
     */
    @Test
    public void compressedNodesTest() {
        // TODO: test compressedNodes
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'estimatedDuration'
     */
    @Test
    public void estimatedDurationTest() {
        // TODO: test estimatedDuration
    }

    /**
     * Test the property 'finishedAt'
     */
    @Test
    public void finishedAtTest() {
        // TODO: test finishedAt
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'nodes'
     */
    @Test
    public void nodesTest() {
        // TODO: test nodes
    }

    /**
     * Test the property 'offloadNodeStatusVersion'
     */
    @Test
    public void offloadNodeStatusVersionTest() {
        // TODO: test offloadNodeStatusVersion
    }

    /**
     * Test the property 'outputs'
     */
    @Test
    public void outputsTest() {
        // TODO: test outputs
    }

    /**
     * Test the property 'persistentVolumeClaims'
     */
    @Test
    public void persistentVolumeClaimsTest() {
        // TODO: test persistentVolumeClaims
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'progress'
     */
    @Test
    public void progressTest() {
        // TODO: test progress
    }

    /**
     * Test the property 'resourcesDuration'
     */
    @Test
    public void resourcesDurationTest() {
        // TODO: test resourcesDuration
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'storedTemplates'
     */
    @Test
    public void storedTemplatesTest() {
        // TODO: test storedTemplates
    }

    /**
     * Test the property 'storedWorkflowTemplateSpec'
     */
    @Test
    public void storedWorkflowTemplateSpecTest() {
        // TODO: test storedWorkflowTemplateSpec
    }

    /**
     * Test the property 'synchronization'
     */
    @Test
    public void synchronizationTest() {
        // TODO: test synchronization
    }

}
