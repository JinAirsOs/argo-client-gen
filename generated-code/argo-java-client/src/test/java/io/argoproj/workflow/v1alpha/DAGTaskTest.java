/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import org.junit.Test;


/**
 * Model tests for DAGTask
 */
public class DAGTaskTest {
    private final DAGTask model = new DAGTask();

    /**
     * Model tests for DAGTask
     */
    @Test
    public void testDAGTask() {
        // TODO: test DAGTask
    }

    /**
     * Test the property 'arguments'
     */
    @Test
    public void argumentsTest() {
        // TODO: test arguments
    }

    /**
     * Test the property 'continueOn'
     */
    @Test
    public void continueOnTest() {
        // TODO: test continueOn
    }

    /**
     * Test the property 'dependencies'
     */
    @Test
    public void dependenciesTest() {
        // TODO: test dependencies
    }

    /**
     * Test the property 'depends'
     */
    @Test
    public void dependsTest() {
        // TODO: test depends
    }

    /**
     * Test the property 'hooks'
     */
    @Test
    public void hooksTest() {
        // TODO: test hooks
    }

    /**
     * Test the property 'inline'
     */
    @Test
    public void inlineTest() {
        // TODO: test inline
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'onExit'
     */
    @Test
    public void onExitTest() {
        // TODO: test onExit
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'templateRef'
     */
    @Test
    public void templateRefTest() {
        // TODO: test templateRef
    }

    /**
     * Test the property 'when'
     */
    @Test
    public void whenTest() {
        // TODO: test when
    }

    /**
     * Test the property 'withItems'
     */
    @Test
    public void withItemsTest() {
        // TODO: test withItems
    }

    /**
     * Test the property 'withParam'
     */
    @Test
    public void withParamTest() {
        // TODO: test withParam
    }

    /**
     * Test the property 'withSequence'
     */
    @Test
    public void withSequenceTest() {
        // TODO: test withSequence
    }

}
