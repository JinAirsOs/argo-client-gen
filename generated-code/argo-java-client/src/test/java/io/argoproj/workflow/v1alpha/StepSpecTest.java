/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import org.junit.Test;


/**
 * Model tests for StepSpec
 */
public class StepSpecTest {
    private final StepSpec model = new StepSpec();

    /**
     * Model tests for StepSpec
     */
    @Test
    public void testStepSpec() {
        // TODO: test StepSpec
    }

    /**
     * Test the property 'affinity'
     */
    @Test
    public void affinityTest() {
        // TODO: test affinity
    }

    /**
     * Test the property 'cat'
     */
    @Test
    public void catTest() {
        // TODO: test cat
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'container'
     */
    @Test
    public void containerTest() {
        // TODO: test container
    }

    /**
     * Test the property 'dedupe'
     */
    @Test
    public void dedupeTest() {
        // TODO: test dedupe
    }

    /**
     * Test the property 'expand'
     */
    @Test
    public void expandTest() {
        // TODO: test expand
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'flatten'
     */
    @Test
    public void flattenTest() {
        // TODO: test flatten
    }

    /**
     * Test the property 'git'
     */
    @Test
    public void gitTest() {
        // TODO: test git
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'imagePullSecrets'
     */
    @Test
    public void imagePullSecretsTest() {
        // TODO: test imagePullSecrets
    }

    /**
     * Test the property 'map'
     */
    @Test
    public void mapTest() {
        // TODO: test map
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeSelector'
     */
    @Test
    public void nodeSelectorTest() {
        // TODO: test nodeSelector
    }

    /**
     * Test the property 'replicas'
     */
    @Test
    public void replicasTest() {
        // TODO: test replicas
    }

    /**
     * Test the property 'restartPolicy'
     */
    @Test
    public void restartPolicyTest() {
        // TODO: test restartPolicy
    }

    /**
     * Test the property 'scale'
     */
    @Test
    public void scaleTest() {
        // TODO: test scale
    }

    /**
     * Test the property 'serviceAccountName'
     */
    @Test
    public void serviceAccountNameTest() {
        // TODO: test serviceAccountName
    }

    /**
     * Test the property 'sidecar'
     */
    @Test
    public void sidecarTest() {
        // TODO: test sidecar
    }

    /**
     * Test the property 'sinks'
     */
    @Test
    public void sinksTest() {
        // TODO: test sinks
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'terminator'
     */
    @Test
    public void terminatorTest() {
        // TODO: test terminator
    }

    /**
     * Test the property 'tolerations'
     */
    @Test
    public void tolerationsTest() {
        // TODO: test tolerations
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

}
