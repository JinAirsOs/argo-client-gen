/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.v1alpha.AWSLambdaTrigger;
import io.argoproj.workflow.v1alpha.ArgoWorkflowTrigger;
import io.argoproj.workflow.v1alpha.AzureEventHubsTrigger;
import io.argoproj.workflow.v1alpha.ConditionsResetCriteria;
import io.argoproj.workflow.v1alpha.CustomTrigger;
import io.argoproj.workflow.v1alpha.HTTPTrigger;
import io.argoproj.workflow.v1alpha.KafkaTrigger;
import io.argoproj.workflow.v1alpha.LogTrigger;
import io.argoproj.workflow.v1alpha.NATSTrigger;
import io.argoproj.workflow.v1alpha.OpenWhiskTrigger;
import io.argoproj.workflow.v1alpha.PulsarTrigger;
import io.argoproj.workflow.v1alpha.SlackTrigger;
import io.argoproj.workflow.v1alpha.StandardK8STrigger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TriggerTemplate
 */
public class TriggerTemplateTest {
    private final TriggerTemplate model = new TriggerTemplate();

    /**
     * Model tests for TriggerTemplate
     */
    @Test
    public void testTriggerTemplate() {
        // TODO: test TriggerTemplate
    }

    /**
     * Test the property 'argoWorkflow'
     */
    @Test
    public void argoWorkflowTest() {
        // TODO: test argoWorkflow
    }

    /**
     * Test the property 'awsLambda'
     */
    @Test
    public void awsLambdaTest() {
        // TODO: test awsLambda
    }

    /**
     * Test the property 'azureEventHubs'
     */
    @Test
    public void azureEventHubsTest() {
        // TODO: test azureEventHubs
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'conditionsReset'
     */
    @Test
    public void conditionsResetTest() {
        // TODO: test conditionsReset
    }

    /**
     * Test the property 'custom'
     */
    @Test
    public void customTest() {
        // TODO: test custom
    }

    /**
     * Test the property 'http'
     */
    @Test
    public void httpTest() {
        // TODO: test http
    }

    /**
     * Test the property 'k8s'
     */
    @Test
    public void k8sTest() {
        // TODO: test k8s
    }

    /**
     * Test the property 'kafka'
     */
    @Test
    public void kafkaTest() {
        // TODO: test kafka
    }

    /**
     * Test the property 'log'
     */
    @Test
    public void logTest() {
        // TODO: test log
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nats'
     */
    @Test
    public void natsTest() {
        // TODO: test nats
    }

    /**
     * Test the property 'openWhisk'
     */
    @Test
    public void openWhiskTest() {
        // TODO: test openWhisk
    }

    /**
     * Test the property 'pulsar'
     */
    @Test
    public void pulsarTest() {
        // TODO: test pulsar
    }

    /**
     * Test the property 'slack'
     */
    @Test
    public void slackTest() {
        // TODO: test slack
    }

}
