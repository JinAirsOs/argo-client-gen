/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.v1alpha.EventSourceFilter;
import io.argoproj.workflow.v1alpha.WatchPathConfig;
import io.kubernetes.client.models.V1ConfigMapKeySelector;
import io.kubernetes.client.models.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HDFSEventSource
 */
public class HDFSEventSourceTest {
    private final HDFSEventSource model = new HDFSEventSource();

    /**
     * Model tests for HDFSEventSource
     */
    @Test
    public void testHDFSEventSource() {
        // TODO: test HDFSEventSource
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    public void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'checkInterval'
     */
    @Test
    public void checkIntervalTest() {
        // TODO: test checkInterval
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'hdfsUser'
     */
    @Test
    public void hdfsUserTest() {
        // TODO: test hdfsUser
    }

    /**
     * Test the property 'krbCCacheSecret'
     */
    @Test
    public void krbCCacheSecretTest() {
        // TODO: test krbCCacheSecret
    }

    /**
     * Test the property 'krbConfigConfigMap'
     */
    @Test
    public void krbConfigConfigMapTest() {
        // TODO: test krbConfigConfigMap
    }

    /**
     * Test the property 'krbKeytabSecret'
     */
    @Test
    public void krbKeytabSecretTest() {
        // TODO: test krbKeytabSecret
    }

    /**
     * Test the property 'krbRealm'
     */
    @Test
    public void krbRealmTest() {
        // TODO: test krbRealm
    }

    /**
     * Test the property 'krbServicePrincipalName'
     */
    @Test
    public void krbServicePrincipalNameTest() {
        // TODO: test krbServicePrincipalName
    }

    /**
     * Test the property 'krbUsername'
     */
    @Test
    public void krbUsernameTest() {
        // TODO: test krbUsername
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'watchPathConfig'
     */
    @Test
    public void watchPathConfigTest() {
        // TODO: test watchPathConfig
    }

}
