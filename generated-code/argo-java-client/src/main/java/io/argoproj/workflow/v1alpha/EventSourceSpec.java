/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * EventSourceSpec
 */

public class EventSourceSpec {
  public static final String SERIALIZED_NAME_AMQP = "amqp";
  @SerializedName(SERIALIZED_NAME_AMQP)
  private Map<String, AMQPEventSource> amqp = null;

  public static final String SERIALIZED_NAME_AZURE_EVENTS_HUB = "azureEventsHub";
  @SerializedName(SERIALIZED_NAME_AZURE_EVENTS_HUB)
  private Map<String, AzureEventsHubEventSource> azureEventsHub = null;

  public static final String SERIALIZED_NAME_BITBUCKET = "bitbucket";
  @SerializedName(SERIALIZED_NAME_BITBUCKET)
  private Map<String, BitbucketEventSource> bitbucket = null;

  public static final String SERIALIZED_NAME_BITBUCKETSERVER = "bitbucketserver";
  @SerializedName(SERIALIZED_NAME_BITBUCKETSERVER)
  private Map<String, BitbucketServerEventSource> bitbucketserver = null;

  public static final String SERIALIZED_NAME_CALENDAR = "calendar";
  @SerializedName(SERIALIZED_NAME_CALENDAR)
  private Map<String, CalendarEventSource> calendar = null;

  public static final String SERIALIZED_NAME_EMITTER = "emitter";
  @SerializedName(SERIALIZED_NAME_EMITTER)
  private Map<String, EmitterEventSource> emitter = null;

  public static final String SERIALIZED_NAME_EVENT_BUS_NAME = "eventBusName";
  @SerializedName(SERIALIZED_NAME_EVENT_BUS_NAME)
  private String eventBusName;

  public static final String SERIALIZED_NAME_FILE = "file";
  @SerializedName(SERIALIZED_NAME_FILE)
  private Map<String, FileEventSource> file = null;

  public static final String SERIALIZED_NAME_GENERIC = "generic";
  @SerializedName(SERIALIZED_NAME_GENERIC)
  private Map<String, GenericEventSource> generic = null;

  public static final String SERIALIZED_NAME_GITHUB = "github";
  @SerializedName(SERIALIZED_NAME_GITHUB)
  private Map<String, GithubEventSource> github = null;

  public static final String SERIALIZED_NAME_GITLAB = "gitlab";
  @SerializedName(SERIALIZED_NAME_GITLAB)
  private Map<String, GitlabEventSource> gitlab = null;

  public static final String SERIALIZED_NAME_HDFS = "hdfs";
  @SerializedName(SERIALIZED_NAME_HDFS)
  private Map<String, HDFSEventSource> hdfs = null;

  public static final String SERIALIZED_NAME_KAFKA = "kafka";
  @SerializedName(SERIALIZED_NAME_KAFKA)
  private Map<String, KafkaEventSource> kafka = null;

  public static final String SERIALIZED_NAME_MINIO = "minio";
  @SerializedName(SERIALIZED_NAME_MINIO)
  private Map<String, S3Artifact> minio = null;

  public static final String SERIALIZED_NAME_MQTT = "mqtt";
  @SerializedName(SERIALIZED_NAME_MQTT)
  private Map<String, MQTTEventSource> mqtt = null;

  public static final String SERIALIZED_NAME_NATS = "nats";
  @SerializedName(SERIALIZED_NAME_NATS)
  private Map<String, NATSEventsSource> nats = null;

  public static final String SERIALIZED_NAME_NSQ = "nsq";
  @SerializedName(SERIALIZED_NAME_NSQ)
  private Map<String, NSQEventSource> nsq = null;

  public static final String SERIALIZED_NAME_PUB_SUB = "pubSub";
  @SerializedName(SERIALIZED_NAME_PUB_SUB)
  private Map<String, PubSubEventSource> pubSub = null;

  public static final String SERIALIZED_NAME_PULSAR = "pulsar";
  @SerializedName(SERIALIZED_NAME_PULSAR)
  private Map<String, PulsarEventSource> pulsar = null;

  public static final String SERIALIZED_NAME_REDIS = "redis";
  @SerializedName(SERIALIZED_NAME_REDIS)
  private Map<String, RedisEventSource> redis = null;

  public static final String SERIALIZED_NAME_REDIS_STREAM = "redisStream";
  @SerializedName(SERIALIZED_NAME_REDIS_STREAM)
  private Map<String, RedisStreamEventSource> redisStream = null;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private Map<String, ResourceEventSource> resource = null;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private Service service;

  public static final String SERIALIZED_NAME_SLACK = "slack";
  @SerializedName(SERIALIZED_NAME_SLACK)
  private Map<String, SlackEventSource> slack = null;

  public static final String SERIALIZED_NAME_SNS = "sns";
  @SerializedName(SERIALIZED_NAME_SNS)
  private Map<String, SNSEventSource> sns = null;

  public static final String SERIALIZED_NAME_SQS = "sqs";
  @SerializedName(SERIALIZED_NAME_SQS)
  private Map<String, SQSEventSource> sqs = null;

  public static final String SERIALIZED_NAME_STORAGE_GRID = "storageGrid";
  @SerializedName(SERIALIZED_NAME_STORAGE_GRID)
  private Map<String, StorageGridEventSource> storageGrid = null;

  public static final String SERIALIZED_NAME_STRIPE = "stripe";
  @SerializedName(SERIALIZED_NAME_STRIPE)
  private Map<String, StripeEventSource> stripe = null;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private Template template;

  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private Map<String, WebhookEventSource> webhook = null;


  public EventSourceSpec amqp(Map<String, AMQPEventSource> amqp) {
    
    this.amqp = amqp;
    return this;
  }

  public EventSourceSpec putAmqpItem(String key, AMQPEventSource amqpItem) {
    if (this.amqp == null) {
      this.amqp = new HashMap<String, AMQPEventSource>();
    }
    this.amqp.put(key, amqpItem);
    return this;
  }

   /**
   * Get amqp
   * @return amqp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, AMQPEventSource> getAmqp() {
    return amqp;
  }


  public void setAmqp(Map<String, AMQPEventSource> amqp) {
    this.amqp = amqp;
  }


  public EventSourceSpec azureEventsHub(Map<String, AzureEventsHubEventSource> azureEventsHub) {
    
    this.azureEventsHub = azureEventsHub;
    return this;
  }

  public EventSourceSpec putAzureEventsHubItem(String key, AzureEventsHubEventSource azureEventsHubItem) {
    if (this.azureEventsHub == null) {
      this.azureEventsHub = new HashMap<String, AzureEventsHubEventSource>();
    }
    this.azureEventsHub.put(key, azureEventsHubItem);
    return this;
  }

   /**
   * Get azureEventsHub
   * @return azureEventsHub
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, AzureEventsHubEventSource> getAzureEventsHub() {
    return azureEventsHub;
  }


  public void setAzureEventsHub(Map<String, AzureEventsHubEventSource> azureEventsHub) {
    this.azureEventsHub = azureEventsHub;
  }


  public EventSourceSpec bitbucket(Map<String, BitbucketEventSource> bitbucket) {
    
    this.bitbucket = bitbucket;
    return this;
  }

  public EventSourceSpec putBitbucketItem(String key, BitbucketEventSource bitbucketItem) {
    if (this.bitbucket == null) {
      this.bitbucket = new HashMap<String, BitbucketEventSource>();
    }
    this.bitbucket.put(key, bitbucketItem);
    return this;
  }

   /**
   * Get bitbucket
   * @return bitbucket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, BitbucketEventSource> getBitbucket() {
    return bitbucket;
  }


  public void setBitbucket(Map<String, BitbucketEventSource> bitbucket) {
    this.bitbucket = bitbucket;
  }


  public EventSourceSpec bitbucketserver(Map<String, BitbucketServerEventSource> bitbucketserver) {
    
    this.bitbucketserver = bitbucketserver;
    return this;
  }

  public EventSourceSpec putBitbucketserverItem(String key, BitbucketServerEventSource bitbucketserverItem) {
    if (this.bitbucketserver == null) {
      this.bitbucketserver = new HashMap<String, BitbucketServerEventSource>();
    }
    this.bitbucketserver.put(key, bitbucketserverItem);
    return this;
  }

   /**
   * Get bitbucketserver
   * @return bitbucketserver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, BitbucketServerEventSource> getBitbucketserver() {
    return bitbucketserver;
  }


  public void setBitbucketserver(Map<String, BitbucketServerEventSource> bitbucketserver) {
    this.bitbucketserver = bitbucketserver;
  }


  public EventSourceSpec calendar(Map<String, CalendarEventSource> calendar) {
    
    this.calendar = calendar;
    return this;
  }

  public EventSourceSpec putCalendarItem(String key, CalendarEventSource calendarItem) {
    if (this.calendar == null) {
      this.calendar = new HashMap<String, CalendarEventSource>();
    }
    this.calendar.put(key, calendarItem);
    return this;
  }

   /**
   * Get calendar
   * @return calendar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, CalendarEventSource> getCalendar() {
    return calendar;
  }


  public void setCalendar(Map<String, CalendarEventSource> calendar) {
    this.calendar = calendar;
  }


  public EventSourceSpec emitter(Map<String, EmitterEventSource> emitter) {
    
    this.emitter = emitter;
    return this;
  }

  public EventSourceSpec putEmitterItem(String key, EmitterEventSource emitterItem) {
    if (this.emitter == null) {
      this.emitter = new HashMap<String, EmitterEventSource>();
    }
    this.emitter.put(key, emitterItem);
    return this;
  }

   /**
   * Get emitter
   * @return emitter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, EmitterEventSource> getEmitter() {
    return emitter;
  }


  public void setEmitter(Map<String, EmitterEventSource> emitter) {
    this.emitter = emitter;
  }


  public EventSourceSpec eventBusName(String eventBusName) {
    
    this.eventBusName = eventBusName;
    return this;
  }

   /**
   * Get eventBusName
   * @return eventBusName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventBusName() {
    return eventBusName;
  }


  public void setEventBusName(String eventBusName) {
    this.eventBusName = eventBusName;
  }


  public EventSourceSpec file(Map<String, FileEventSource> file) {
    
    this.file = file;
    return this;
  }

  public EventSourceSpec putFileItem(String key, FileEventSource fileItem) {
    if (this.file == null) {
      this.file = new HashMap<String, FileEventSource>();
    }
    this.file.put(key, fileItem);
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, FileEventSource> getFile() {
    return file;
  }


  public void setFile(Map<String, FileEventSource> file) {
    this.file = file;
  }


  public EventSourceSpec generic(Map<String, GenericEventSource> generic) {
    
    this.generic = generic;
    return this;
  }

  public EventSourceSpec putGenericItem(String key, GenericEventSource genericItem) {
    if (this.generic == null) {
      this.generic = new HashMap<String, GenericEventSource>();
    }
    this.generic.put(key, genericItem);
    return this;
  }

   /**
   * Get generic
   * @return generic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, GenericEventSource> getGeneric() {
    return generic;
  }


  public void setGeneric(Map<String, GenericEventSource> generic) {
    this.generic = generic;
  }


  public EventSourceSpec github(Map<String, GithubEventSource> github) {
    
    this.github = github;
    return this;
  }

  public EventSourceSpec putGithubItem(String key, GithubEventSource githubItem) {
    if (this.github == null) {
      this.github = new HashMap<String, GithubEventSource>();
    }
    this.github.put(key, githubItem);
    return this;
  }

   /**
   * Get github
   * @return github
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, GithubEventSource> getGithub() {
    return github;
  }


  public void setGithub(Map<String, GithubEventSource> github) {
    this.github = github;
  }


  public EventSourceSpec gitlab(Map<String, GitlabEventSource> gitlab) {
    
    this.gitlab = gitlab;
    return this;
  }

  public EventSourceSpec putGitlabItem(String key, GitlabEventSource gitlabItem) {
    if (this.gitlab == null) {
      this.gitlab = new HashMap<String, GitlabEventSource>();
    }
    this.gitlab.put(key, gitlabItem);
    return this;
  }

   /**
   * Get gitlab
   * @return gitlab
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, GitlabEventSource> getGitlab() {
    return gitlab;
  }


  public void setGitlab(Map<String, GitlabEventSource> gitlab) {
    this.gitlab = gitlab;
  }


  public EventSourceSpec hdfs(Map<String, HDFSEventSource> hdfs) {
    
    this.hdfs = hdfs;
    return this;
  }

  public EventSourceSpec putHdfsItem(String key, HDFSEventSource hdfsItem) {
    if (this.hdfs == null) {
      this.hdfs = new HashMap<String, HDFSEventSource>();
    }
    this.hdfs.put(key, hdfsItem);
    return this;
  }

   /**
   * Get hdfs
   * @return hdfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, HDFSEventSource> getHdfs() {
    return hdfs;
  }


  public void setHdfs(Map<String, HDFSEventSource> hdfs) {
    this.hdfs = hdfs;
  }


  public EventSourceSpec kafka(Map<String, KafkaEventSource> kafka) {
    
    this.kafka = kafka;
    return this;
  }

  public EventSourceSpec putKafkaItem(String key, KafkaEventSource kafkaItem) {
    if (this.kafka == null) {
      this.kafka = new HashMap<String, KafkaEventSource>();
    }
    this.kafka.put(key, kafkaItem);
    return this;
  }

   /**
   * Get kafka
   * @return kafka
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, KafkaEventSource> getKafka() {
    return kafka;
  }


  public void setKafka(Map<String, KafkaEventSource> kafka) {
    this.kafka = kafka;
  }


  public EventSourceSpec minio(Map<String, S3Artifact> minio) {
    
    this.minio = minio;
    return this;
  }

  public EventSourceSpec putMinioItem(String key, S3Artifact minioItem) {
    if (this.minio == null) {
      this.minio = new HashMap<String, S3Artifact>();
    }
    this.minio.put(key, minioItem);
    return this;
  }

   /**
   * Get minio
   * @return minio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, S3Artifact> getMinio() {
    return minio;
  }


  public void setMinio(Map<String, S3Artifact> minio) {
    this.minio = minio;
  }


  public EventSourceSpec mqtt(Map<String, MQTTEventSource> mqtt) {
    
    this.mqtt = mqtt;
    return this;
  }

  public EventSourceSpec putMqttItem(String key, MQTTEventSource mqttItem) {
    if (this.mqtt == null) {
      this.mqtt = new HashMap<String, MQTTEventSource>();
    }
    this.mqtt.put(key, mqttItem);
    return this;
  }

   /**
   * Get mqtt
   * @return mqtt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, MQTTEventSource> getMqtt() {
    return mqtt;
  }


  public void setMqtt(Map<String, MQTTEventSource> mqtt) {
    this.mqtt = mqtt;
  }


  public EventSourceSpec nats(Map<String, NATSEventsSource> nats) {
    
    this.nats = nats;
    return this;
  }

  public EventSourceSpec putNatsItem(String key, NATSEventsSource natsItem) {
    if (this.nats == null) {
      this.nats = new HashMap<String, NATSEventsSource>();
    }
    this.nats.put(key, natsItem);
    return this;
  }

   /**
   * Get nats
   * @return nats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, NATSEventsSource> getNats() {
    return nats;
  }


  public void setNats(Map<String, NATSEventsSource> nats) {
    this.nats = nats;
  }


  public EventSourceSpec nsq(Map<String, NSQEventSource> nsq) {
    
    this.nsq = nsq;
    return this;
  }

  public EventSourceSpec putNsqItem(String key, NSQEventSource nsqItem) {
    if (this.nsq == null) {
      this.nsq = new HashMap<String, NSQEventSource>();
    }
    this.nsq.put(key, nsqItem);
    return this;
  }

   /**
   * Get nsq
   * @return nsq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, NSQEventSource> getNsq() {
    return nsq;
  }


  public void setNsq(Map<String, NSQEventSource> nsq) {
    this.nsq = nsq;
  }


  public EventSourceSpec pubSub(Map<String, PubSubEventSource> pubSub) {
    
    this.pubSub = pubSub;
    return this;
  }

  public EventSourceSpec putPubSubItem(String key, PubSubEventSource pubSubItem) {
    if (this.pubSub == null) {
      this.pubSub = new HashMap<String, PubSubEventSource>();
    }
    this.pubSub.put(key, pubSubItem);
    return this;
  }

   /**
   * Get pubSub
   * @return pubSub
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, PubSubEventSource> getPubSub() {
    return pubSub;
  }


  public void setPubSub(Map<String, PubSubEventSource> pubSub) {
    this.pubSub = pubSub;
  }


  public EventSourceSpec pulsar(Map<String, PulsarEventSource> pulsar) {
    
    this.pulsar = pulsar;
    return this;
  }

  public EventSourceSpec putPulsarItem(String key, PulsarEventSource pulsarItem) {
    if (this.pulsar == null) {
      this.pulsar = new HashMap<String, PulsarEventSource>();
    }
    this.pulsar.put(key, pulsarItem);
    return this;
  }

   /**
   * Get pulsar
   * @return pulsar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, PulsarEventSource> getPulsar() {
    return pulsar;
  }


  public void setPulsar(Map<String, PulsarEventSource> pulsar) {
    this.pulsar = pulsar;
  }


  public EventSourceSpec redis(Map<String, RedisEventSource> redis) {
    
    this.redis = redis;
    return this;
  }

  public EventSourceSpec putRedisItem(String key, RedisEventSource redisItem) {
    if (this.redis == null) {
      this.redis = new HashMap<String, RedisEventSource>();
    }
    this.redis.put(key, redisItem);
    return this;
  }

   /**
   * Get redis
   * @return redis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, RedisEventSource> getRedis() {
    return redis;
  }


  public void setRedis(Map<String, RedisEventSource> redis) {
    this.redis = redis;
  }


  public EventSourceSpec redisStream(Map<String, RedisStreamEventSource> redisStream) {
    
    this.redisStream = redisStream;
    return this;
  }

  public EventSourceSpec putRedisStreamItem(String key, RedisStreamEventSource redisStreamItem) {
    if (this.redisStream == null) {
      this.redisStream = new HashMap<String, RedisStreamEventSource>();
    }
    this.redisStream.put(key, redisStreamItem);
    return this;
  }

   /**
   * Get redisStream
   * @return redisStream
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, RedisStreamEventSource> getRedisStream() {
    return redisStream;
  }


  public void setRedisStream(Map<String, RedisStreamEventSource> redisStream) {
    this.redisStream = redisStream;
  }


  public EventSourceSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public EventSourceSpec resource(Map<String, ResourceEventSource> resource) {
    
    this.resource = resource;
    return this;
  }

  public EventSourceSpec putResourceItem(String key, ResourceEventSource resourceItem) {
    if (this.resource == null) {
      this.resource = new HashMap<String, ResourceEventSource>();
    }
    this.resource.put(key, resourceItem);
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, ResourceEventSource> getResource() {
    return resource;
  }


  public void setResource(Map<String, ResourceEventSource> resource) {
    this.resource = resource;
  }


  public EventSourceSpec service(Service service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Service getService() {
    return service;
  }


  public void setService(Service service) {
    this.service = service;
  }


  public EventSourceSpec slack(Map<String, SlackEventSource> slack) {
    
    this.slack = slack;
    return this;
  }

  public EventSourceSpec putSlackItem(String key, SlackEventSource slackItem) {
    if (this.slack == null) {
      this.slack = new HashMap<String, SlackEventSource>();
    }
    this.slack.put(key, slackItem);
    return this;
  }

   /**
   * Get slack
   * @return slack
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, SlackEventSource> getSlack() {
    return slack;
  }


  public void setSlack(Map<String, SlackEventSource> slack) {
    this.slack = slack;
  }


  public EventSourceSpec sns(Map<String, SNSEventSource> sns) {
    
    this.sns = sns;
    return this;
  }

  public EventSourceSpec putSnsItem(String key, SNSEventSource snsItem) {
    if (this.sns == null) {
      this.sns = new HashMap<String, SNSEventSource>();
    }
    this.sns.put(key, snsItem);
    return this;
  }

   /**
   * Get sns
   * @return sns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, SNSEventSource> getSns() {
    return sns;
  }


  public void setSns(Map<String, SNSEventSource> sns) {
    this.sns = sns;
  }


  public EventSourceSpec sqs(Map<String, SQSEventSource> sqs) {
    
    this.sqs = sqs;
    return this;
  }

  public EventSourceSpec putSqsItem(String key, SQSEventSource sqsItem) {
    if (this.sqs == null) {
      this.sqs = new HashMap<String, SQSEventSource>();
    }
    this.sqs.put(key, sqsItem);
    return this;
  }

   /**
   * Get sqs
   * @return sqs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, SQSEventSource> getSqs() {
    return sqs;
  }


  public void setSqs(Map<String, SQSEventSource> sqs) {
    this.sqs = sqs;
  }


  public EventSourceSpec storageGrid(Map<String, StorageGridEventSource> storageGrid) {
    
    this.storageGrid = storageGrid;
    return this;
  }

  public EventSourceSpec putStorageGridItem(String key, StorageGridEventSource storageGridItem) {
    if (this.storageGrid == null) {
      this.storageGrid = new HashMap<String, StorageGridEventSource>();
    }
    this.storageGrid.put(key, storageGridItem);
    return this;
  }

   /**
   * Get storageGrid
   * @return storageGrid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, StorageGridEventSource> getStorageGrid() {
    return storageGrid;
  }


  public void setStorageGrid(Map<String, StorageGridEventSource> storageGrid) {
    this.storageGrid = storageGrid;
  }


  public EventSourceSpec stripe(Map<String, StripeEventSource> stripe) {
    
    this.stripe = stripe;
    return this;
  }

  public EventSourceSpec putStripeItem(String key, StripeEventSource stripeItem) {
    if (this.stripe == null) {
      this.stripe = new HashMap<String, StripeEventSource>();
    }
    this.stripe.put(key, stripeItem);
    return this;
  }

   /**
   * Get stripe
   * @return stripe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, StripeEventSource> getStripe() {
    return stripe;
  }


  public void setStripe(Map<String, StripeEventSource> stripe) {
    this.stripe = stripe;
  }


  public EventSourceSpec template(Template template) {
    
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Template getTemplate() {
    return template;
  }


  public void setTemplate(Template template) {
    this.template = template;
  }


  public EventSourceSpec webhook(Map<String, WebhookEventSource> webhook) {
    
    this.webhook = webhook;
    return this;
  }

  public EventSourceSpec putWebhookItem(String key, WebhookEventSource webhookItem) {
    if (this.webhook == null) {
      this.webhook = new HashMap<String, WebhookEventSource>();
    }
    this.webhook.put(key, webhookItem);
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, WebhookEventSource> getWebhook() {
    return webhook;
  }


  public void setWebhook(Map<String, WebhookEventSource> webhook) {
    this.webhook = webhook;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventSourceSpec ioArgoprojEventsV1alpha1EventSourceSpec = (EventSourceSpec) o;
    return Objects.equals(this.amqp, ioArgoprojEventsV1alpha1EventSourceSpec.amqp) &&
        Objects.equals(this.azureEventsHub, ioArgoprojEventsV1alpha1EventSourceSpec.azureEventsHub) &&
        Objects.equals(this.bitbucket, ioArgoprojEventsV1alpha1EventSourceSpec.bitbucket) &&
        Objects.equals(this.bitbucketserver, ioArgoprojEventsV1alpha1EventSourceSpec.bitbucketserver) &&
        Objects.equals(this.calendar, ioArgoprojEventsV1alpha1EventSourceSpec.calendar) &&
        Objects.equals(this.emitter, ioArgoprojEventsV1alpha1EventSourceSpec.emitter) &&
        Objects.equals(this.eventBusName, ioArgoprojEventsV1alpha1EventSourceSpec.eventBusName) &&
        Objects.equals(this.file, ioArgoprojEventsV1alpha1EventSourceSpec.file) &&
        Objects.equals(this.generic, ioArgoprojEventsV1alpha1EventSourceSpec.generic) &&
        Objects.equals(this.github, ioArgoprojEventsV1alpha1EventSourceSpec.github) &&
        Objects.equals(this.gitlab, ioArgoprojEventsV1alpha1EventSourceSpec.gitlab) &&
        Objects.equals(this.hdfs, ioArgoprojEventsV1alpha1EventSourceSpec.hdfs) &&
        Objects.equals(this.kafka, ioArgoprojEventsV1alpha1EventSourceSpec.kafka) &&
        Objects.equals(this.minio, ioArgoprojEventsV1alpha1EventSourceSpec.minio) &&
        Objects.equals(this.mqtt, ioArgoprojEventsV1alpha1EventSourceSpec.mqtt) &&
        Objects.equals(this.nats, ioArgoprojEventsV1alpha1EventSourceSpec.nats) &&
        Objects.equals(this.nsq, ioArgoprojEventsV1alpha1EventSourceSpec.nsq) &&
        Objects.equals(this.pubSub, ioArgoprojEventsV1alpha1EventSourceSpec.pubSub) &&
        Objects.equals(this.pulsar, ioArgoprojEventsV1alpha1EventSourceSpec.pulsar) &&
        Objects.equals(this.redis, ioArgoprojEventsV1alpha1EventSourceSpec.redis) &&
        Objects.equals(this.redisStream, ioArgoprojEventsV1alpha1EventSourceSpec.redisStream) &&
        Objects.equals(this.replicas, ioArgoprojEventsV1alpha1EventSourceSpec.replicas) &&
        Objects.equals(this.resource, ioArgoprojEventsV1alpha1EventSourceSpec.resource) &&
        Objects.equals(this.service, ioArgoprojEventsV1alpha1EventSourceSpec.service) &&
        Objects.equals(this.slack, ioArgoprojEventsV1alpha1EventSourceSpec.slack) &&
        Objects.equals(this.sns, ioArgoprojEventsV1alpha1EventSourceSpec.sns) &&
        Objects.equals(this.sqs, ioArgoprojEventsV1alpha1EventSourceSpec.sqs) &&
        Objects.equals(this.storageGrid, ioArgoprojEventsV1alpha1EventSourceSpec.storageGrid) &&
        Objects.equals(this.stripe, ioArgoprojEventsV1alpha1EventSourceSpec.stripe) &&
        Objects.equals(this.template, ioArgoprojEventsV1alpha1EventSourceSpec.template) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1EventSourceSpec.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amqp, azureEventsHub, bitbucket, bitbucketserver, calendar, emitter, eventBusName, file, generic, github, gitlab, hdfs, kafka, minio, mqtt, nats, nsq, pubSub, pulsar, redis, redisStream, replicas, resource, service, slack, sns, sqs, storageGrid, stripe, template, webhook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventSourceSpec {\n");
    sb.append("    amqp: ").append(toIndentedString(amqp)).append("\n");
    sb.append("    azureEventsHub: ").append(toIndentedString(azureEventsHub)).append("\n");
    sb.append("    bitbucket: ").append(toIndentedString(bitbucket)).append("\n");
    sb.append("    bitbucketserver: ").append(toIndentedString(bitbucketserver)).append("\n");
    sb.append("    calendar: ").append(toIndentedString(calendar)).append("\n");
    sb.append("    emitter: ").append(toIndentedString(emitter)).append("\n");
    sb.append("    eventBusName: ").append(toIndentedString(eventBusName)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    generic: ").append(toIndentedString(generic)).append("\n");
    sb.append("    github: ").append(toIndentedString(github)).append("\n");
    sb.append("    gitlab: ").append(toIndentedString(gitlab)).append("\n");
    sb.append("    hdfs: ").append(toIndentedString(hdfs)).append("\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("    minio: ").append(toIndentedString(minio)).append("\n");
    sb.append("    mqtt: ").append(toIndentedString(mqtt)).append("\n");
    sb.append("    nats: ").append(toIndentedString(nats)).append("\n");
    sb.append("    nsq: ").append(toIndentedString(nsq)).append("\n");
    sb.append("    pubSub: ").append(toIndentedString(pubSub)).append("\n");
    sb.append("    pulsar: ").append(toIndentedString(pulsar)).append("\n");
    sb.append("    redis: ").append(toIndentedString(redis)).append("\n");
    sb.append("    redisStream: ").append(toIndentedString(redisStream)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    slack: ").append(toIndentedString(slack)).append("\n");
    sb.append("    sns: ").append(toIndentedString(sns)).append("\n");
    sb.append("    sqs: ").append(toIndentedString(sqs)).append("\n");
    sb.append("    storageGrid: ").append(toIndentedString(storageGrid)).append("\n");
    sb.append("    stripe: ").append(toIndentedString(stripe)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

