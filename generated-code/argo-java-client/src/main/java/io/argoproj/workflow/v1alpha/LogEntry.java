/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;

/**
 * LogEntry
 */

public class LogEntry {
  public static final String SERIALIZED_NAME_DEPENDENCY_NAME = "dependencyName";
  @SerializedName(SERIALIZED_NAME_DEPENDENCY_NAME)
  private String dependencyName;

  public static final String SERIALIZED_NAME_EVENT_CONTEXT = "eventContext";
  @SerializedName(SERIALIZED_NAME_EVENT_CONTEXT)
  private String eventContext;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private String level;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private String msg;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_SENSOR_NAME = "sensorName";
  @SerializedName(SERIALIZED_NAME_SENSOR_NAME)
  private String sensorName;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private DateTime time;

  public static final String SERIALIZED_NAME_TRIGGER_NAME = "triggerName";
  @SerializedName(SERIALIZED_NAME_TRIGGER_NAME)
  private String triggerName;


  public LogEntry dependencyName(String dependencyName) {
    
    this.dependencyName = dependencyName;
    return this;
  }

   /**
   * Get dependencyName
   * @return dependencyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDependencyName() {
    return dependencyName;
  }


  public void setDependencyName(String dependencyName) {
    this.dependencyName = dependencyName;
  }


  public LogEntry eventContext(String eventContext) {
    
    this.eventContext = eventContext;
    return this;
  }

   /**
   * Get eventContext
   * @return eventContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventContext() {
    return eventContext;
  }


  public void setEventContext(String eventContext) {
    this.eventContext = eventContext;
  }


  public LogEntry level(String level) {
    
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLevel() {
    return level;
  }


  public void setLevel(String level) {
    this.level = level;
  }


  public LogEntry msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * Get msg
   * @return msg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMsg() {
    return msg;
  }


  public void setMsg(String msg) {
    this.msg = msg;
  }


  public LogEntry namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public LogEntry sensorName(String sensorName) {
    
    this.sensorName = sensorName;
    return this;
  }

   /**
   * Get sensorName
   * @return sensorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSensorName() {
    return sensorName;
  }


  public void setSensorName(String sensorName) {
    this.sensorName = sensorName;
  }


  public LogEntry time(DateTime time) {
    
    this.time = time;
    return this;
  }

   /**
   * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.")

  public DateTime getTime() {
    return time;
  }


  public void setTime(DateTime time) {
    this.time = time;
  }


  public LogEntry triggerName(String triggerName) {
    
    this.triggerName = triggerName;
    return this;
  }

   /**
   * Get triggerName
   * @return triggerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTriggerName() {
    return triggerName;
  }


  public void setTriggerName(String triggerName) {
    this.triggerName = triggerName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogEntry sensorLogEntry = (LogEntry) o;
    return Objects.equals(this.dependencyName, sensorLogEntry.dependencyName) &&
        Objects.equals(this.eventContext, sensorLogEntry.eventContext) &&
        Objects.equals(this.level, sensorLogEntry.level) &&
        Objects.equals(this.msg, sensorLogEntry.msg) &&
        Objects.equals(this.namespace, sensorLogEntry.namespace) &&
        Objects.equals(this.sensorName, sensorLogEntry.sensorName) &&
        Objects.equals(this.time, sensorLogEntry.time) &&
        Objects.equals(this.triggerName, sensorLogEntry.triggerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dependencyName, eventContext, level, msg, namespace, sensorName, time, triggerName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogEntry {\n");
    sb.append("    dependencyName: ").append(toIndentedString(dependencyName)).append("\n");
    sb.append("    eventContext: ").append(toIndentedString(eventContext)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    sensorName: ").append(toIndentedString(sensorName)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    triggerName: ").append(toIndentedString(triggerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

