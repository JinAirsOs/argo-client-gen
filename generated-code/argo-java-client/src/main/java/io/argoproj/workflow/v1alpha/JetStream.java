/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.v1alpha.NATSAuth;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * JetStream
 */

public class JetStream {
  public static final String SERIALIZED_NAME_AUTH = "auth";
  @SerializedName(SERIALIZED_NAME_AUTH)
  private NATSAuth auth;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NATS_URL = "natsUrl";
  @SerializedName(SERIALIZED_NAME_NATS_URL)
  private String natsUrl;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;


  public JetStream auth(NATSAuth auth) {
    
    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NATSAuth getAuth() {
    return auth;
  }


  public void setAuth(NATSAuth auth) {
    this.auth = auth;
  }


  public JetStream name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public JetStream natsUrl(String natsUrl) {
    
    this.natsUrl = natsUrl;
    return this;
  }

   /**
   * Get natsUrl
   * @return natsUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNatsUrl() {
    return natsUrl;
  }


  public void setNatsUrl(String natsUrl) {
    this.natsUrl = natsUrl;
  }


  public JetStream subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JetStream githubComArgoprojLabsArgoDataflowApiV1alpha1JetStream = (JetStream) o;
    return Objects.equals(this.auth, githubComArgoprojLabsArgoDataflowApiV1alpha1JetStream.auth) &&
        Objects.equals(this.name, githubComArgoprojLabsArgoDataflowApiV1alpha1JetStream.name) &&
        Objects.equals(this.natsUrl, githubComArgoprojLabsArgoDataflowApiV1alpha1JetStream.natsUrl) &&
        Objects.equals(this.subject, githubComArgoprojLabsArgoDataflowApiV1alpha1JetStream.subject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auth, name, natsUrl, subject);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JetStream {\n");
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    natsUrl: ").append(toIndentedString(natsUrl)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

