/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * GitRemoteConfig
 */

public class GitRemoteConfig {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_URLS = "urls";
  @SerializedName(SERIALIZED_NAME_URLS)
  private List<String> urls = null;


  public GitRemoteConfig name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the remote to fetch from.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the remote to fetch from.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GitRemoteConfig urls(List<String> urls) {
    
    this.urls = urls;
    return this;
  }

  public GitRemoteConfig addUrlsItem(String urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<String>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * URLs the URLs of a remote repository. It must be non-empty. Fetch will always use the first URL, while push will use all of them.
   * @return urls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URLs the URLs of a remote repository. It must be non-empty. Fetch will always use the first URL, while push will use all of them.")

  public List<String> getUrls() {
    return urls;
  }


  public void setUrls(List<String> urls) {
    this.urls = urls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitRemoteConfig ioArgoprojEventsV1alpha1GitRemoteConfig = (GitRemoteConfig) o;
    return Objects.equals(this.name, ioArgoprojEventsV1alpha1GitRemoteConfig.name) &&
        Objects.equals(this.urls, ioArgoprojEventsV1alpha1GitRemoteConfig.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, urls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitRemoteConfig {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

