/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.models.V1EnvVar;
import io.kubernetes.client.models.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Git
 */

public class Git {
  public static final String SERIALIZED_NAME_BRANCH = "branch";
  @SerializedName(SERIALIZED_NAME_BRANCH)
  private String branch;

  public static final String SERIALIZED_NAME_COMMAND = "command";
  @SerializedName(SERIALIZED_NAME_COMMAND)
  private List<String> command = null;

  public static final String SERIALIZED_NAME_ENV = "env";
  @SerializedName(SERIALIZED_NAME_ENV)
  private List<V1EnvVar> env = null;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_INSECURE_IGNORE_HOST_KEY = "insecureIgnoreHostKey";
  @SerializedName(SERIALIZED_NAME_INSECURE_IGNORE_HOST_KEY)
  private Boolean insecureIgnoreHostKey;

  public static final String SERIALIZED_NAME_PASSWORD_SECRET = "passwordSecret";
  @SerializedName(SERIALIZED_NAME_PASSWORD_SECRET)
  private V1SecretKeySelector passwordSecret;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_SSH_PRIVATE_KEY_SECRET = "sshPrivateKeySecret";
  @SerializedName(SERIALIZED_NAME_SSH_PRIVATE_KEY_SECRET)
  private V1SecretKeySelector sshPrivateKeySecret;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USERNAME_SECRET = "usernameSecret";
  @SerializedName(SERIALIZED_NAME_USERNAME_SECRET)
  private V1SecretKeySelector usernameSecret;


  public Git branch(String branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBranch() {
    return branch;
  }


  public void setBranch(String branch) {
    this.branch = branch;
  }


  public Git command(List<String> command) {
    
    this.command = command;
    return this;
  }

  public Git addCommandItem(String commandItem) {
    if (this.command == null) {
      this.command = new ArrayList<String>();
    }
    this.command.add(commandItem);
    return this;
  }

   /**
   * Get command
   * @return command
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getCommand() {
    return command;
  }


  public void setCommand(List<String> command) {
    this.command = command;
  }


  public Git env(List<V1EnvVar> env) {
    
    this.env = env;
    return this;
  }

  public Git addEnvItem(V1EnvVar envItem) {
    if (this.env == null) {
      this.env = new ArrayList<V1EnvVar>();
    }
    this.env.add(envItem);
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1EnvVar> getEnv() {
    return env;
  }


  public void setEnv(List<V1EnvVar> env) {
    this.env = env;
  }


  public Git image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public Git insecureIgnoreHostKey(Boolean insecureIgnoreHostKey) {
    
    this.insecureIgnoreHostKey = insecureIgnoreHostKey;
    return this;
  }

   /**
   * Get insecureIgnoreHostKey
   * @return insecureIgnoreHostKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInsecureIgnoreHostKey() {
    return insecureIgnoreHostKey;
  }


  public void setInsecureIgnoreHostKey(Boolean insecureIgnoreHostKey) {
    this.insecureIgnoreHostKey = insecureIgnoreHostKey;
  }


  public Git passwordSecret(V1SecretKeySelector passwordSecret) {
    
    this.passwordSecret = passwordSecret;
    return this;
  }

   /**
   * Get passwordSecret
   * @return passwordSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getPasswordSecret() {
    return passwordSecret;
  }


  public void setPasswordSecret(V1SecretKeySelector passwordSecret) {
    this.passwordSecret = passwordSecret;
  }


  public Git path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * +kubebuilder:default&#x3D;.
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "+kubebuilder:default=.")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public Git sshPrivateKeySecret(V1SecretKeySelector sshPrivateKeySecret) {
    
    this.sshPrivateKeySecret = sshPrivateKeySecret;
    return this;
  }

   /**
   * Get sshPrivateKeySecret
   * @return sshPrivateKeySecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getSshPrivateKeySecret() {
    return sshPrivateKeySecret;
  }


  public void setSshPrivateKeySecret(V1SecretKeySelector sshPrivateKeySecret) {
    this.sshPrivateKeySecret = sshPrivateKeySecret;
  }


  public Git url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public Git usernameSecret(V1SecretKeySelector usernameSecret) {
    
    this.usernameSecret = usernameSecret;
    return this;
  }

   /**
   * Get usernameSecret
   * @return usernameSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getUsernameSecret() {
    return usernameSecret;
  }


  public void setUsernameSecret(V1SecretKeySelector usernameSecret) {
    this.usernameSecret = usernameSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Git githubComArgoprojLabsArgoDataflowApiV1alpha1Git = (Git) o;
    return Objects.equals(this.branch, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.branch) &&
        Objects.equals(this.command, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.command) &&
        Objects.equals(this.env, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.env) &&
        Objects.equals(this.image, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.image) &&
        Objects.equals(this.insecureIgnoreHostKey, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.insecureIgnoreHostKey) &&
        Objects.equals(this.passwordSecret, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.passwordSecret) &&
        Objects.equals(this.path, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.path) &&
        Objects.equals(this.sshPrivateKeySecret, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.sshPrivateKeySecret) &&
        Objects.equals(this.url, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.url) &&
        Objects.equals(this.usernameSecret, githubComArgoprojLabsArgoDataflowApiV1alpha1Git.usernameSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branch, command, env, image, insecureIgnoreHostKey, passwordSecret, path, sshPrivateKeySecret, url, usernameSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Git {\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    command: ").append(toIndentedString(command)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    insecureIgnoreHostKey: ").append(toIndentedString(insecureIgnoreHostKey)).append("\n");
    sb.append("    passwordSecret: ").append(toIndentedString(passwordSecret)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    sshPrivateKeySecret: ").append(toIndentedString(sshPrivateKeySecret)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usernameSecret: ").append(toIndentedString(usernameSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

