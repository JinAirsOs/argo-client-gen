/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * InfoResponse
 */

public class InfoResponse {
  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Link> links = null;

  public static final String SERIALIZED_NAME_MANAGED_NAMESPACE = "managedNamespace";
  @SerializedName(SERIALIZED_NAME_MANAGED_NAMESPACE)
  private String managedNamespace;

  public static final String SERIALIZED_NAME_MODALS = "modals";
  @SerializedName(SERIALIZED_NAME_MODALS)
  private Map<String, Boolean> modals = null;

  public static final String SERIALIZED_NAME_NAV_COLOR = "navColor";
  @SerializedName(SERIALIZED_NAME_NAV_COLOR)
  private String navColor;


  public InfoResponse links(List<Link> links) {
    
    this.links = links;
    return this;
  }

  public InfoResponse addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Link> getLinks() {
    return links;
  }


  public void setLinks(List<Link> links) {
    this.links = links;
  }


  public InfoResponse managedNamespace(String managedNamespace) {
    
    this.managedNamespace = managedNamespace;
    return this;
  }

   /**
   * Get managedNamespace
   * @return managedNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getManagedNamespace() {
    return managedNamespace;
  }


  public void setManagedNamespace(String managedNamespace) {
    this.managedNamespace = managedNamespace;
  }


  public InfoResponse modals(Map<String, Boolean> modals) {
    
    this.modals = modals;
    return this;
  }

  public InfoResponse putModalsItem(String key, Boolean modalsItem) {
    if (this.modals == null) {
      this.modals = new HashMap<String, Boolean>();
    }
    this.modals.put(key, modalsItem);
    return this;
  }

   /**
   * Get modals
   * @return modals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Boolean> getModals() {
    return modals;
  }


  public void setModals(Map<String, Boolean> modals) {
    this.modals = modals;
  }


  public InfoResponse navColor(String navColor) {
    
    this.navColor = navColor;
    return this;
  }

   /**
   * Get navColor
   * @return navColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNavColor() {
    return navColor;
  }


  public void setNavColor(String navColor) {
    this.navColor = navColor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfoResponse ioArgoprojWorkflowV1alpha1InfoResponse = (InfoResponse) o;
    return Objects.equals(this.links, ioArgoprojWorkflowV1alpha1InfoResponse.links) &&
        Objects.equals(this.managedNamespace, ioArgoprojWorkflowV1alpha1InfoResponse.managedNamespace) &&
        Objects.equals(this.modals, ioArgoprojWorkflowV1alpha1InfoResponse.modals) &&
        Objects.equals(this.navColor, ioArgoprojWorkflowV1alpha1InfoResponse.navColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, managedNamespace, modals, navColor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfoResponse {\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    managedNamespace: ").append(toIndentedString(managedNamespace)).append("\n");
    sb.append("    modals: ").append(toIndentedString(modals)).append("\n");
    sb.append("    navColor: ").append(toIndentedString(navColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

