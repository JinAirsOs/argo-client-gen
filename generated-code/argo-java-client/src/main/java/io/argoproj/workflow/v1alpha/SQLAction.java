/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.v1alpha.SQLStatement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SQLAction
 */

public class SQLAction {
  public static final String SERIALIZED_NAME_ON_ERROR = "onError";
  @SerializedName(SERIALIZED_NAME_ON_ERROR)
  private SQLStatement onError;

  public static final String SERIALIZED_NAME_ON_RECORD_NOT_FOUND = "onRecordNotFound";
  @SerializedName(SERIALIZED_NAME_ON_RECORD_NOT_FOUND)
  private SQLStatement onRecordNotFound;

  public static final String SERIALIZED_NAME_STATEMENT = "statement";
  @SerializedName(SERIALIZED_NAME_STATEMENT)
  private SQLStatement statement;


  public SQLAction onError(SQLStatement onError) {
    
    this.onError = onError;
    return this;
  }

   /**
   * Get onError
   * @return onError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SQLStatement getOnError() {
    return onError;
  }


  public void setOnError(SQLStatement onError) {
    this.onError = onError;
  }


  public SQLAction onRecordNotFound(SQLStatement onRecordNotFound) {
    
    this.onRecordNotFound = onRecordNotFound;
    return this;
  }

   /**
   * Get onRecordNotFound
   * @return onRecordNotFound
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SQLStatement getOnRecordNotFound() {
    return onRecordNotFound;
  }


  public void setOnRecordNotFound(SQLStatement onRecordNotFound) {
    this.onRecordNotFound = onRecordNotFound;
  }


  public SQLAction statement(SQLStatement statement) {
    
    this.statement = statement;
    return this;
  }

   /**
   * Get statement
   * @return statement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SQLStatement getStatement() {
    return statement;
  }


  public void setStatement(SQLStatement statement) {
    this.statement = statement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SQLAction githubComArgoprojLabsArgoDataflowApiV1alpha1SQLAction = (SQLAction) o;
    return Objects.equals(this.onError, githubComArgoprojLabsArgoDataflowApiV1alpha1SQLAction.onError) &&
        Objects.equals(this.onRecordNotFound, githubComArgoprojLabsArgoDataflowApiV1alpha1SQLAction.onRecordNotFound) &&
        Objects.equals(this.statement, githubComArgoprojLabsArgoDataflowApiV1alpha1SQLAction.statement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(onError, onRecordNotFound, statement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SQLAction {\n");
    sb.append("    onError: ").append(toIndentedString(onError)).append("\n");
    sb.append("    onRecordNotFound: ").append(toIndentedString(onRecordNotFound)).append("\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

