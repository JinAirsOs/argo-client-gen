/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.v1alpha.AWSElasticBlockStoreVolumeSource;
import io.argoproj.workflow.v1alpha.AzureDiskVolumeSource;
import io.argoproj.workflow.v1alpha.AzureFileVolumeSource;
import io.argoproj.workflow.v1alpha.CSIVolumeSource;
import io.argoproj.workflow.v1alpha.CephFSVolumeSource;
import io.argoproj.workflow.v1alpha.CinderVolumeSource;
import io.argoproj.workflow.v1alpha.ConfigMapVolumeSource;
import io.argoproj.workflow.v1alpha.DownwardAPIVolumeSource;
import io.argoproj.workflow.v1alpha.EmptyDirVolumeSource;
import io.argoproj.workflow.v1alpha.EphemeralVolumeSource;
import io.argoproj.workflow.v1alpha.FCVolumeSource;
import io.argoproj.workflow.v1alpha.FlexVolumeSource;
import io.argoproj.workflow.v1alpha.FlockerVolumeSource;
import io.argoproj.workflow.v1alpha.GCEPersistentDiskVolumeSource;
import io.argoproj.workflow.v1alpha.GitRepoVolumeSource;
import io.argoproj.workflow.v1alpha.GlusterfsVolumeSource;
import io.argoproj.workflow.v1alpha.HostPathVolumeSource;
import io.argoproj.workflow.v1alpha.ISCSIVolumeSource;
import io.argoproj.workflow.v1alpha.NFSVolumeSource;
import io.argoproj.workflow.v1alpha.PersistentVolumeClaimVolumeSource;
import io.argoproj.workflow.v1alpha.PhotonPersistentDiskVolumeSource;
import io.argoproj.workflow.v1alpha.PortworxVolumeSource;
import io.argoproj.workflow.v1alpha.ProjectedVolumeSource;
import io.argoproj.workflow.v1alpha.QuobyteVolumeSource;
import io.argoproj.workflow.v1alpha.RBDVolumeSource;
import io.argoproj.workflow.v1alpha.ScaleIOVolumeSource;
import io.argoproj.workflow.v1alpha.SecretVolumeSource;
import io.argoproj.workflow.v1alpha.StorageOSVolumeSource;
import io.argoproj.workflow.v1alpha.VsphereVirtualDiskVolumeSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 */
@ApiModel(description = "Volume represents a named volume in a pod that may be accessed by any container in the pod.")

public class V1Volume {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private AWSElasticBlockStoreVolumeSource awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private AzureDiskVolumeSource azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private AzureFileVolumeSource azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private CephFSVolumeSource cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private CinderVolumeSource cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private ConfigMapVolumeSource configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private CSIVolumeSource csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private DownwardAPIVolumeSource downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private EmptyDirVolumeSource emptyDir;

  public static final String SERIALIZED_NAME_EPHEMERAL = "ephemeral";
  @SerializedName(SERIALIZED_NAME_EPHEMERAL)
  private EphemeralVolumeSource ephemeral;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private FCVolumeSource fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private FlexVolumeSource flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private FlockerVolumeSource flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private GCEPersistentDiskVolumeSource gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private GitRepoVolumeSource gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private GlusterfsVolumeSource glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private HostPathVolumeSource hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private ISCSIVolumeSource iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private NFSVolumeSource nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private PersistentVolumeClaimVolumeSource persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private PhotonPersistentDiskVolumeSource photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private PortworxVolumeSource portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private ProjectedVolumeSource projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private QuobyteVolumeSource quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private RBDVolumeSource rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private ScaleIOVolumeSource scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private SecretVolumeSource secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private StorageOSVolumeSource storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private VsphereVirtualDiskVolumeSource vsphereVolume;


  public V1Volume awsElasticBlockStore(AWSElasticBlockStoreVolumeSource awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AWSElasticBlockStoreVolumeSource getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(AWSElasticBlockStoreVolumeSource awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1Volume azureDisk(AzureDiskVolumeSource azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AzureDiskVolumeSource getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(AzureDiskVolumeSource azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1Volume azureFile(AzureFileVolumeSource azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AzureFileVolumeSource getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(AzureFileVolumeSource azureFile) {
    this.azureFile = azureFile;
  }


  public V1Volume cephfs(CephFSVolumeSource cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CephFSVolumeSource getCephfs() {
    return cephfs;
  }


  public void setCephfs(CephFSVolumeSource cephfs) {
    this.cephfs = cephfs;
  }


  public V1Volume cinder(CinderVolumeSource cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CinderVolumeSource getCinder() {
    return cinder;
  }


  public void setCinder(CinderVolumeSource cinder) {
    this.cinder = cinder;
  }


  public V1Volume configMap(ConfigMapVolumeSource configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigMapVolumeSource getConfigMap() {
    return configMap;
  }


  public void setConfigMap(ConfigMapVolumeSource configMap) {
    this.configMap = configMap;
  }


  public V1Volume csi(CSIVolumeSource csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CSIVolumeSource getCsi() {
    return csi;
  }


  public void setCsi(CSIVolumeSource csi) {
    this.csi = csi;
  }


  public V1Volume downwardAPI(DownwardAPIVolumeSource downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DownwardAPIVolumeSource getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(DownwardAPIVolumeSource downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1Volume emptyDir(EmptyDirVolumeSource emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmptyDirVolumeSource getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(EmptyDirVolumeSource emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1Volume ephemeral(EphemeralVolumeSource ephemeral) {
    
    this.ephemeral = ephemeral;
    return this;
  }

   /**
   * Get ephemeral
   * @return ephemeral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EphemeralVolumeSource getEphemeral() {
    return ephemeral;
  }


  public void setEphemeral(EphemeralVolumeSource ephemeral) {
    this.ephemeral = ephemeral;
  }


  public V1Volume fc(FCVolumeSource fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FCVolumeSource getFc() {
    return fc;
  }


  public void setFc(FCVolumeSource fc) {
    this.fc = fc;
  }


  public V1Volume flexVolume(FlexVolumeSource flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FlexVolumeSource getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(FlexVolumeSource flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1Volume flocker(FlockerVolumeSource flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FlockerVolumeSource getFlocker() {
    return flocker;
  }


  public void setFlocker(FlockerVolumeSource flocker) {
    this.flocker = flocker;
  }


  public V1Volume gcePersistentDisk(GCEPersistentDiskVolumeSource gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GCEPersistentDiskVolumeSource getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(GCEPersistentDiskVolumeSource gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1Volume gitRepo(GitRepoVolumeSource gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GitRepoVolumeSource getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(GitRepoVolumeSource gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1Volume glusterfs(GlusterfsVolumeSource glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GlusterfsVolumeSource getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(GlusterfsVolumeSource glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1Volume hostPath(HostPathVolumeSource hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HostPathVolumeSource getHostPath() {
    return hostPath;
  }


  public void setHostPath(HostPathVolumeSource hostPath) {
    this.hostPath = hostPath;
  }


  public V1Volume iscsi(ISCSIVolumeSource iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ISCSIVolumeSource getIscsi() {
    return iscsi;
  }


  public void setIscsi(ISCSIVolumeSource iscsi) {
    this.iscsi = iscsi;
  }


  public V1Volume name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Volume&#39;s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1Volume nfs(NFSVolumeSource nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NFSVolumeSource getNfs() {
    return nfs;
  }


  public void setNfs(NFSVolumeSource nfs) {
    this.nfs = nfs;
  }


  public V1Volume persistentVolumeClaim(PersistentVolumeClaimVolumeSource persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PersistentVolumeClaimVolumeSource getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(PersistentVolumeClaimVolumeSource persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1Volume photonPersistentDisk(PhotonPersistentDiskVolumeSource photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PhotonPersistentDiskVolumeSource getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(PhotonPersistentDiskVolumeSource photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1Volume portworxVolume(PortworxVolumeSource portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PortworxVolumeSource getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(PortworxVolumeSource portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1Volume projected(ProjectedVolumeSource projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectedVolumeSource getProjected() {
    return projected;
  }


  public void setProjected(ProjectedVolumeSource projected) {
    this.projected = projected;
  }


  public V1Volume quobyte(QuobyteVolumeSource quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QuobyteVolumeSource getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(QuobyteVolumeSource quobyte) {
    this.quobyte = quobyte;
  }


  public V1Volume rbd(RBDVolumeSource rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RBDVolumeSource getRbd() {
    return rbd;
  }


  public void setRbd(RBDVolumeSource rbd) {
    this.rbd = rbd;
  }


  public V1Volume scaleIO(ScaleIOVolumeSource scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScaleIOVolumeSource getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(ScaleIOVolumeSource scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1Volume secret(SecretVolumeSource secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SecretVolumeSource getSecret() {
    return secret;
  }


  public void setSecret(SecretVolumeSource secret) {
    this.secret = secret;
  }


  public V1Volume storageos(StorageOSVolumeSource storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StorageOSVolumeSource getStorageos() {
    return storageos;
  }


  public void setStorageos(StorageOSVolumeSource storageos) {
    this.storageos = storageos;
  }


  public V1Volume vsphereVolume(VsphereVirtualDiskVolumeSource vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VsphereVirtualDiskVolumeSource getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(VsphereVirtualDiskVolumeSource vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1Volume ioK8sApiCoreV1Volume = (V1Volume) o;
    return Objects.equals(this.awsElasticBlockStore, ioK8sApiCoreV1Volume.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, ioK8sApiCoreV1Volume.azureDisk) &&
        Objects.equals(this.azureFile, ioK8sApiCoreV1Volume.azureFile) &&
        Objects.equals(this.cephfs, ioK8sApiCoreV1Volume.cephfs) &&
        Objects.equals(this.cinder, ioK8sApiCoreV1Volume.cinder) &&
        Objects.equals(this.configMap, ioK8sApiCoreV1Volume.configMap) &&
        Objects.equals(this.csi, ioK8sApiCoreV1Volume.csi) &&
        Objects.equals(this.downwardAPI, ioK8sApiCoreV1Volume.downwardAPI) &&
        Objects.equals(this.emptyDir, ioK8sApiCoreV1Volume.emptyDir) &&
        Objects.equals(this.ephemeral, ioK8sApiCoreV1Volume.ephemeral) &&
        Objects.equals(this.fc, ioK8sApiCoreV1Volume.fc) &&
        Objects.equals(this.flexVolume, ioK8sApiCoreV1Volume.flexVolume) &&
        Objects.equals(this.flocker, ioK8sApiCoreV1Volume.flocker) &&
        Objects.equals(this.gcePersistentDisk, ioK8sApiCoreV1Volume.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, ioK8sApiCoreV1Volume.gitRepo) &&
        Objects.equals(this.glusterfs, ioK8sApiCoreV1Volume.glusterfs) &&
        Objects.equals(this.hostPath, ioK8sApiCoreV1Volume.hostPath) &&
        Objects.equals(this.iscsi, ioK8sApiCoreV1Volume.iscsi) &&
        Objects.equals(this.name, ioK8sApiCoreV1Volume.name) &&
        Objects.equals(this.nfs, ioK8sApiCoreV1Volume.nfs) &&
        Objects.equals(this.persistentVolumeClaim, ioK8sApiCoreV1Volume.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, ioK8sApiCoreV1Volume.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, ioK8sApiCoreV1Volume.portworxVolume) &&
        Objects.equals(this.projected, ioK8sApiCoreV1Volume.projected) &&
        Objects.equals(this.quobyte, ioK8sApiCoreV1Volume.quobyte) &&
        Objects.equals(this.rbd, ioK8sApiCoreV1Volume.rbd) &&
        Objects.equals(this.scaleIO, ioK8sApiCoreV1Volume.scaleIO) &&
        Objects.equals(this.secret, ioK8sApiCoreV1Volume.secret) &&
        Objects.equals(this.storageos, ioK8sApiCoreV1Volume.storageos) &&
        Objects.equals(this.vsphereVolume, ioK8sApiCoreV1Volume.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1Volume {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    ephemeral: ").append(toIndentedString(ephemeral)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

