/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.v1alpha;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * WorkflowTaskSetSpec
 */

public class WorkflowTaskSetSpec {
  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private Map<String, Template> tasks = null;


  public WorkflowTaskSetSpec tasks(Map<String, Template> tasks) {
    
    this.tasks = tasks;
    return this;
  }

  public WorkflowTaskSetSpec putTasksItem(String key, Template tasksItem) {
    if (this.tasks == null) {
      this.tasks = new HashMap<String, Template>();
    }
    this.tasks.put(key, tasksItem);
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Template> getTasks() {
    return tasks;
  }


  public void setTasks(Map<String, Template> tasks) {
    this.tasks = tasks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTaskSetSpec ioArgoprojWorkflowV1alpha1WorkflowTaskSetSpec = (WorkflowTaskSetSpec) o;
    return Objects.equals(this.tasks, ioArgoprojWorkflowV1alpha1WorkflowTaskSetSpec.tasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTaskSetSpec {\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

